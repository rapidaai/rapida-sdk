name: Build and Publish Golang SDK

on:
  push:
    paths:
      - "rapida-golang/**"
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21 # Use correct format without minor version or patch

      - name: Install dependencies
        run: go mod tidy
        working-directory: rapida-golang

      - name: Build the SDK
        run: go build -v ./...
        working-directory: rapida-golang

  publish:
    name: Publish Go Module
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21 # Use correct format without minor version or patch

      - name: Install dependencies
        run: go mod tidy
        working-directory: rapida-golang

      - name: Authenticate to GitHub Package Registry
        run: echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Tag version and push tags
        env:
          GIT_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(cat rapida-golang/version.txt)
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag go-v${VERSION}
          git push https://x-access-token:${GIT_AUTH_TOKEN}@github.com/rapidaai/rapida-sdk go-v${VERSION}

      - name: Configure Go Module Proxy
        run: |
          go env -w GOPROXY=proxy.golang.org
          working-directory: rapida-golang

      - name: Publish to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(cat rapida-golang/version.txt)
          GOPROXY="https://npm.pkg.github.com/${{ github.repository_owner }}" \
          go list -m github.com/rapidaai/rapida-sdk@go-v${VERSION}
          go publish ./rapida-golang
        working-directory: rapida-golang
