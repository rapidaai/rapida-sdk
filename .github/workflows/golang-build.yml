name: Build and Publish Golang SDK

on:
  push:
    paths:
      - "rapida-golang/**"
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Install dependencies
        run: go mod tidy
        working-directory: rapida-golang

      - name: Build the SDK
        run: go build -v ./...
        working-directory: rapida-golang

  publish:
    name: Publish Go Module
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      actions: write
      attestations: write
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Install dependencies
        run: go mod tidy
        working-directory: rapida-golang

      - name: Tag the release
        id: tag
        run: |
          VERSION=$(cat rapida-golang/version.txt)
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git tag -a "go-v${VERSION}" -m "Release version ${VERSION}"
          git push origin "go-v${VERSION}"
        #   git push https://x-access-token:${{ secrets.GH_TOKEN }}}@github.com/rapidaai/rapida-sdk.git "go-v${VERSION}"

      - name: Configure Go Module Proxy
        run: |
          go env -w GOPROXY=https://proxy.golang.org,direct
        working-directory: rapida-golang

      - name: Publish to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION=$(cat rapida-golang/version.txt)
          GOPROXY="https://proxy.golang.org,direct" \
          go list -m example.com/my/module@go-v${VERSION} # Replace with your module path
          go publish ./rapida-golang
        working-directory: rapida-golang
