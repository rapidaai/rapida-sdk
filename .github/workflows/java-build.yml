name: Build and Deploy to Maven

on:
  push:
    paths:
      - "rapida-java/**"
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: maven

      - name: Build with Maven
        run: mvn clean install
        working-directory: rapida-java

  deploy:
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"
          cache: maven

      - name: Configure Maven for deployment
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        run: |
          mkdir -p $HOME/.m2
          echo "<settings>
                  <servers>
                    <server>
                      <id>ossrh</id>
                      <username>${OSSRH_USERNAME}</username>
                      <password>${OSSRH_PASSWORD}</password>
                    </server>
                  </servers>
                </settings>" > $HOME/.m2/settings.xml

      - name: Deploy to OSSRH
        run: mvn clean deploy -P release -DskipTests
        working-directory: rapida-java

  tag:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Tag the release
        run: |
          NEW_TAG=$(date +'%Y%m%d%H%M%S')
          git tag -a "v${NEW_TAG}" -m "Release version ${NEW_TAG}"
          git push origin "v${NEW_TAG}"
